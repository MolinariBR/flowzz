#!/bin/bash

# üê≥ Script para gerenciar servi√ßos Docker do Flowzz
# PostgreSQL + Redis para desenvolvimento

echo "üê≥ Flowzz Docker Services Manager"
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar se estamos no diret√≥rio backend
if [ ! -f "docker-compose.yml" ]; then
    print_error "Erro: Execute este script no diret√≥rio backend/"
    print_warning "Use: cd backend && ../scripts/docker-services.sh [comando]"
    exit 1
fi

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    print_error "Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro."
    exit 1
fi

case "$1" in
    "start"|"up")
        echo "üê≥ Iniciando servi√ßos Docker..."
        docker-compose up -d

        echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
        sleep 10

        if docker-compose ps | grep -q "Up"; then
            print_success "Servi√ßos Docker iniciados!"
            echo ""
            echo "üìä Servi√ßos dispon√≠veis:"
            echo "  - PostgreSQL: localhost:5433"
            echo "  - Redis: localhost:6380"
            echo "  - Redis Commander: http://localhost:8081"
        else
            print_error "Falha ao iniciar servi√ßos. Verificando logs..."
            docker-compose logs
            exit 1
        fi
        ;;

    "stop"|"down")
        echo "üõë Parando servi√ßos Docker..."
        docker-compose down
        print_success "Servi√ßos Docker parados!"
        ;;

    "restart")
        echo "üîÑ Reiniciando servi√ßos Docker..."
        docker-compose restart
        print_success "Servi√ßos Docker reiniciados!"
        ;;

    "status"|"ps")
        echo "üìä Status dos servi√ßos Docker:"
        docker-compose ps
        ;;

    "logs")
        echo "üìã Logs dos servi√ßos Docker:"
        docker-compose logs -f
        ;;

    "clean")
        echo "üßπ Limpando volumes e dados..."
        docker-compose down -v
        print_success "Dados limpos!"
        ;;

    *)
        echo "Uso: $0 {start|stop|restart|status|logs|clean}"
        echo ""
        echo "Comandos:"
        echo "  start  - Iniciar servi√ßos Docker"
        echo "  stop   - Parar servi√ßos Docker"
        echo "  restart- Reiniciar servi√ßos Docker"
        echo "  status - Ver status dos servi√ßos"
        echo "  logs   - Ver logs dos servi√ßos"
        echo "  clean  - Limpar volumes e dados"
        exit 1
        ;;
esac